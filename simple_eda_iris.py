# -*- coding: utf-8 -*-
"""Simple EDA Iris.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nr4OEtBvHhw3TKzRc0q_qUqhSFf980hT

**✨SIMPLE EXPLORATORY DATA ANALYSIS (EDA)**

Import Library
"""

import pandas as pd

"""Load Dataset"""

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Iris.csv')
df.head()

"""Drop atau membuah Kolom "ID"
"""

df.drop(columns='Id', inplace=True) #inplace= df yg sama tanpa membuat df lain
df.head()

"""Identifikasi Bentuk/Dimensi Dataset"""

df.shape

"""Menampilkan Daftar Kolom dan Tipe Data"""

df.columns

df.dtypes

"""Informasi Dataset"""

df.info()

"""Identifikasi Missing Value"""

df.isna().values.any() #Mendeteksi nilai kosong

"""Identifikasi Duplikasi"""

df[df.duplicated()] #Menampilkan baris duplikasi sekunder
df[df.duplicated(keep=False)] #Menampilkan seluruh baris duplikasi

df.duplicated().value_counts() #Jumlah duplikasi data

"""Hapus Duplikasi"""

df.drop_duplicates(inplace=True) #Menghapus duplikasi data
df.shape

"""Statistik Deskriptif"""

df.describe()

"""Correlation Matrix"""

numerical_df = df.select_dtypes(include=['float', 'int'])
correlation_matrix = numerical_df.corr()
print(correlation_matrix)

"""**✨DATA VISUALISASI**

Import Library
"""

import matplotlib.pyplot as plt
import seaborn as sns

"""Heatmap"""

sns.heatmap(correlation_matrix, annot=True, cmap = 'coolwarm')
plt.tight_layout()
plt.show()

"""Bar Plot"""

df['Species'].value_counts() #Menghitung jumlah setiap species

df['Species'].value_counts().plot.bar()
plt.tight_layout() #Menampilkan visualisasi optimal dari layar yang ada
plt.show()

sns.countplot(data=df, x='Species')
plt.tight_layout()

"""Pie Chart"""

df['Species'].value_counts().plot.pie(autopct='%1.1f%%', labels=None, legend=True)
plt.tight_layout()

"""Plot"""

fig,ax = plt.subplots(nrows=2, ncols=2, figsize=(8,8))

df['SepalLengthCm'].plot.line(ax=ax[0][0])
ax[0][0].set_title('Sepal Length')

df['SepalWidthCm'].plot.line(ax=ax[0][1])
ax[0][1].set_title('Sepal Width')

df['PetalLengthCm'].plot.line(ax=ax[1][0])
ax[1][0].set_title('Petal Length')

df['PetalWidthCm'].plot.line(ax=ax[1][1])
ax[1][1].set_title('Petal Width')

df.plot() #visualisasi baris dalam satu kotak
plt.tight_layout()

"""Histogram"""

df.hist(figsize=(6,6), bins=10) #bins adalah penggalan data atau lebar data
plt.tight_layout()

"""Boxplot"""

df.boxplot()
plt.tight_layout()

df.boxplot(by='Species', figsize=(6,6))
plt.tight_layout()

"""Scatter Plot"""

sns.scatterplot(x='SepalLengthCm', y='SepalWidthCm', data=df, hue='Species')
plt.tight_layout()

"""Pair Plot"""

sns.pairplot(df, hue='Species', markers='+')
plt.tight_layout()

"""Violin Plot"""

sns.violinplot(data=df, y='Species', x='SepalLengthCm', inner='quartile')
plt.tight_layout()